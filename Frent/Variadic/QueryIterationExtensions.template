arity: 16
from:
                    if (!Component<T>.IsSparseComponent) c1 = ref Unsafe.Add(ref c1, 1);
to:
|                    if (!Component<T$>.IsSparseComponent) c$ = ref Unsafe.Add(ref c$, 1);
|
from:
                if (!Component<T>.IsSparseComponent) c1 = ref Unsafe.Add(ref c1, 1);
to:
|                if (!Component<T$>.IsSparseComponent) c$ = ref Unsafe.Add(ref c$, 1);
|
from:
            scoped ref T c1 = ref Component<T>.IsSparseComponent ?
                ref Unsafe.NullRef<T>() :
                ref archetype.GetComponentDataReference<T>();
to:
|            scoped ref T$ c$ = ref Component<T$>.IsSparseComponent ?
                ref Unsafe.NullRef<T$>() :
                ref archetype.GetComponentDataReference<T$>();
|
from:
                if (Component<T>.IsSparseComponent)
                {
                    if (!((uint)id < (uint)sparseArgArray.Length)) continue;
                    int index = sparseArgArray[id];
                    if (index < 0) continue;
                    c1 = ref Unsafe.Add(ref sparseFirst, index);
                }
to:
|                if (Component<T$>.IsSparseComponent)
                {
                    if (!((uint)id < (uint)sparseArgArray$.Length)) continue;
                    int index = sparseArgArray$[id];
                    if (index < 0) continue;
                    c$ = ref Unsafe.Add(ref sparseFirst$, index);
                }
|
from:
        query.AssertHasSparseComponent<T>();
to:
|        query.AssertHasSparseComponent<T$>();
|
from:
            ref T sparseFirst = ref IRunner.InitSparse<T>(ref first, out Span<int> sparseArgArray);
to:
|            ref T$ sparseFirst$ = ref IRunner.InitSparse<T$>(ref first, out Span<int> sparseArgArray$);
|
from:
        ref T sparseFirst = ref IRunner.InitSparse<T>(ref first, out Span<int> sparseArgArray);
to:
|        ref T$ sparseFirst$ = ref IRunner.InitSparse<T$>(ref first, out Span<int> sparseArgArray$);
|
from:
                ref T c1 = ref Component<T>.IsSparseComponent ?
                    ref Unsafe.NullRef<T>() :
                    ref archetype.GetComponentDataReference<T>();
to:
|                ref T$ c$ = ref Component<T$>.IsSparseComponent ?
                    ref Unsafe.NullRef<T$>() :
                    ref archetype.GetComponentDataReference<T$>();
|
from:
                    if (Component<T>.IsSparseComponent)
                    {
                        int id = entity.ID;
                        if (!((uint)id < (uint)sparseArgArray.Length)) continue;
                        int index = sparseArgArray[id];
                        if (index < 0) continue;
                        c1 = ref Unsafe.Add(ref sparseFirst, index);
                    }
to:
|                    if (Component<T$>.IsSparseComponent)
                    {
                        int id = entity.ID;
                        if (!((uint)id < (uint)sparseArgArray$.Length)) continue;
                        int index = sparseArgArray$[id];
                        if (index < 0) continue;
                        c$ = ref Unsafe.Add(ref sparseFirst$, index);
                    }
|
from:
<T>
to:
<|T$, |>
from:
<TAction, T>
to:
<TAction, |T$, |>
from:
ref T arg
to:
|ref T$ arg$, |
from:
ref arg
to:
|ref arg$, |
from:
, T>
to:
, |T$, |>
from:
action.Run(ref c1);
to:
action.Run(|ref c$, |);